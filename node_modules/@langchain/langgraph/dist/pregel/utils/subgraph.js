// eslint-disable-next-line @typescript-eslint/no-explicit-any
function isRunnableSequence(x) {
    return "steps" in x && Array.isArray(x.steps);
}
function isPregelLike(
// eslint-disable-next-line @typescript-eslint/no-explicit-any
x
// eslint-disable-next-line @typescript-eslint/no-explicit-any
) {
    return ("inputChannels" in x &&
        x.inputChannels !== undefined &&
        "outputChannels" &&
        x.outputChannels !== undefined);
}
export function findSubgraphPregel(candidate
// eslint-disable-next-line @typescript-eslint/no-explicit-any
) {
    const candidates = [candidate];
    for (const candidate of candidates) {
        if (isPregelLike(candidate)) {
            return candidate;
        }
        else if (isRunnableSequence(candidate)) {
            candidates.push(...candidate.steps);
        }
    }
    return undefined;
}
